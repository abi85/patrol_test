workflows:
  patrol_test:
    name: Patrol Test Workflow
    instance_type: linux_x2
    environment:
      flutter: stable
      xcode: latest
      vars:
        ANDROID_HOME: $HOME/Library/Android/sdk
        ANDROID_SDK_ROOT: /opt/android-sdk
        PATH: $PATH:/opt/android-sdk/cmdline-tools/latest/bin:/opt/android-sdk/platform-tools:/opt/android-sdk/emulator
    scripts:
      # 1. Install Flutter dependencies
      - name: Install Flutter dependencies
        script: |
          flutter pub get
          
      # 2. Set up Android SDK Command-Line Tools
      - name: Set up Android SDK
        script: |
          mkdir -p $ANDROID_HOME/cmdline-tools
          curl -o sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-mac-9477386_latest.zip
          unzip sdk-tools.zip -d $ANDROID_HOME/cmdline-tools
          mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
          rm sdk-tools.zip

      - name: Debug PATH and SDK Tools
        script: |
          echo "PATH: $PATH"
          which sdkmanager || echo "sdkmanager not found"
          ls -l $ANDROID_HOME/cmdline-tools/latest/bin || echo "SDK Tools directory not found"
      
      - name: Install Android SDK Components
        script: |
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "system-images;android-30;google_apis_playstore;arm64-v8a"
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
          
      # 3. Create Android Virtual Device (AVD)
      - name: Set up Android emulator
        script: |
          sdkmanager --update
          sdkmanager "emulator"
          echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n patrol_test_avd -k "system-images;android-30;google_apis_playstore;arm64-v8a" --device "pixel_4"
          echo "no" | sdkmanager "system-images;android-30;google_apis_playstore;x86_64"
          echo "no" | avdmanager create avd -n Patrol_Test -k "system-images;android-30;google_apis_playstore;x86_64" --device "pixel_4"
          $ANDROID_HOME/emulator/emulator -avd Ppatrol_test_avd -verbose
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --list 
          $ANDROID_HOME/emulator/emulator -avd patrol_test_avd -no-window -gpu swiftshader_indirect -no-snapshot &
          adb wait-for-device
          adb shell input keyevent 82 # Unlock screen

      - name: Run tests with Patrol
        script: patrol test -t integration_test/e2e_test.dart
        ignore_failure: true

    artifacts:
      # Collect Patrol test reports
      - ./patrol/reports/**/*
