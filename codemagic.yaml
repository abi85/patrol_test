definitions:
  qa_emails: &qa_emails
    - baloabby@gmail.com
  
  artifacts: &artifacts
    - patrol-results/**/*.png
    - patrol-results/**/*.xml
    - patrol-results/**/*.mp4
    - test-reports/**/*.html
    - build/reports/**

  env_settings: &env_settings
    flutter: 3.24.3
    xcode: latest
    cocoapods: default

  scripts:
    - &setup_report_dirs
      name: Setup Report Directories
      script: |
        mkdir -p test-reports/{android,ios}/html

    - &install_flutter_dependencies
      name: Get Flutter dependencies
      script: |
        flutter clean
        flutter pub get

    - &install_patrol_cli
      name: Install Patrol CLI
      script: |
        dart pub global activate patrol_cli 3.4.0
        export PATH="$PATH:$HOME/.pub-cache/bin"

    - &android_setup_emulator
      name: Setup Android Emulator
      script: |
        export PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools
        sdkmanager --update
        yes | sdkmanager --licenses
        cd $ANDROID_HOME/tools
        emulator -avd emulator-34 &
        adb wait-for-device
        adb shell input keyevent 82

    - &android_patrol_test
      name: Run Android Patrol Tests
      script: |
        export PLATFORM=android
        TEST_DIR="test-reports/android"
        
        # Run tests and create report
        TEST_OUTPUT=$(patrol test -t integration_test/fail_login_test.dart --verbose)
        echo "$TEST_OUTPUT" > "$TEST_DIR/test_output.txt"
        
        cat > "$TEST_DIR/html/report.html" << EOF
        <!DOCTYPE html>
        <html>
        <head>
            <title>Android Test Report</title>
            <style>
                body { font-family: Arial, sans-serif; margin: 40px; }
                .header { background: #f5f5f5; padding: 20px; }
                .content { padding: 20px; }
                .success { color: green; }
                .failure { color: red; }
            </style>
        </head>
        <body>
            <div class="header">
                <h1>Android Patrol Test Results</h1>
                <p>Date: $(date)</p>
            </div>
            <div class="content">
                <h2>Test Output</h2>
                <pre>$(cat "$TEST_DIR/test_output.txt")</pre>
            </div>
        </body>
        </html>
        EOF

        # Verify report generation
        echo "Checking test report..."
        ls -la $TEST_DIR/html/report.html
        echo "Report generated successfully"
      ignore_failure: false

    - &ios_setup
      name: Setup iOS Environment
      script: |
        cd ios
        pod repo update
        pod install
        cd ..

    - &ios_simulator_setup
      name: Start iOS Simulator
      script: |
        xcrun simctl boot "iPhone 15"

    - &ios_patrol_test
      name: Run iOS Patrol Tests
      script: |
        export PLATFORM=ios
        TEST_DIR="test-reports/ios"
        
        # Run tests and create report
        TEST_OUTPUT=$(patrol test -t integration_test/fail_login_test.dart -d "iPhone 15" --verbose)
        echo "$TEST_OUTPUT" > "$TEST_DIR/test_output.txt"
        
        cat > "$TEST_DIR/html/report.html" << EOF
        <!DOCTYPE html>
        <html>
        <head>
            <title>iOS Test Report</title>
            <style>
                body { font-family: Arial, sans-serif; margin: 40px; }
                .header { background: #f5f5f5; padding: 20px; }
                .content { padding: 20px; }
                .success { color: green; }
                .failure { color: red; }
            </style>
        </head>
        <body>
            <div class="header">
                <h1>iOS Patrol Test Results</h1>
                <p>Date: $(date)</p>
            </div>
            <div class="content">
                <h2>Test Output</h2>
                <pre>$(cat "$TEST_DIR/test_output.txt")</pre>
            </div>
        </body>
        </html>
        EOF

        # Verify report generation
        echo "Checking test report..."
        ls -la $TEST_DIR/html/report.html
        echo "Report generated successfully"

    - &verify_and_prepare_report
      name: Verify Report Generation
      script: |
        if [ "$PLATFORM" = "android" ]; then
          ls -la test-reports/android/html/report.html
          cat test-reports/android/html/report.html
        elif [ "$PLATFORM" = "ios" ]; then
          ls -la test-reports/ios/html/report.html
          cat test-reports/ios/html/report.html
        else
          echo "Platform not set correctly"
          exit 1
        fi

workflows:
  patrol_android_test:
    name: Android Test Workflow
    max_build_duration: 120
    instance_type: linux
    environment:
      <<: *env_settings
      vars:
        PLATFORM: android
    scripts:
      - *setup_report_dirs
      - *install_flutter_dependencies
      - *install_patrol_cli
      - *android_setup_emulator
      - *android_patrol_test
      - *verify_and_prepare_report
    artifacts: *artifacts
    publishing:
      email:
        recipients: *qa_emails
        notify:
          success: true
          failure: true

  patrol_ios_test:
    name: iOS Test Workflow
    instance_type: mac_mini_m2
    max_build_duration: 120
    environment:
      <<: *env_settings
      vars:
        PLATFORM: ios
    scripts:
      - *setup_report_dirs
      - *install_flutter_dependencies
      - *install_patrol_cli
      - *ios_setup
      - *ios_simulator_setup
      - *ios_patrol_test
      - *verify_and_prepare_report
    artifacts: *artifacts
    publishing:
      email:
        recipients: *qa_emails
        notify:
          success: true
          failure: true