definitions:
  qa_emails: &qa_emails
    - baloabby@gmail.com

  env_settings: &env_settings
    flutter: 3.24.3
    xcode: latest
    cocoapods: default

  scripts:
    - &install_flutter_dependencies
      name: Get Flutter dependencies
      script: |
        flutter clean
        flutter pub get

    - &install_patrol_cli
      name: Install Patrol CLI
      script: |
        dart pub global activate patrol_cli 3.4.0

        
    - &setup_test_report_directory
      name: Setup Test Report Directory
      script: |
        mkdir -p $FCI_BUILD_DIR/test-results/{android,ios}/{reports,screenshots}


    - &android_setup_emulator
      name: Setup Android Emulator
      script: |
        # Setup SDK
        export PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools
        sdkmanager --update
        yes | sdkmanager --licenses
        
        # Create and launch emulator
        cd $ANDROID_HOME/tools
        emulator -avd emulator-34 &
        adb wait-for-device
        adb shell input keyevent 82

    - &android_patrol_test
      name: Run Android Patrol Tests
      script: |
        # Create test results directory
        TEST_RESULTS_DIR="$FCI_BUILD_DIR/test-results/android"
        
        # Run tests with report generation
        patrol test -t integration_test/fail_login_test.dart \
          --verbose \
          --dart-define=allowDebugFeatures=true \
          --reporter junit \
          --output "$TEST_RESULTS_DIR/reports/test-results.xml"
      ignore_failure: false

    - &android_test_report
      name: Generate Android Test Report
      script: |
        if [ -d "$FCI_BUILD_DIR/test-results/android" ]; then
          echo "Generating Android test report..."
          
          # Create HTML report directory
          mkdir -p $FCI_BUILD_DIR/test-results/android/html
          
          # Generate HTML report
          echo "<html><body>" > $FCI_BUILD_DIR/test-results/android/html/index.html
          echo "<h1>Android Test Results</h1>" >> $FCI_BUILD_DIR/test-results/android/html/index.html
          echo "<pre>" >> $FCI_BUILD_DIR/test-results/android/html/index.html
          cat $FCI_BUILD_DIR/test-results/android/reports/test-results.xml >> $FCI_BUILD_DIR/test-results/android/html/index.html
          echo "</pre></body></html>" >> $FCI_BUILD_DIR/test-results/android/html/index.html
          
          # Generate test summary
          echo "Test Summary:" > $FCI_BUILD_DIR/test-results/android/summary.txt
          grep "tests=" $FCI_BUILD_DIR/test-results/android/reports/test-results.xml >> $FCI_BUILD_DIR/test-results/android/summary.txt
        else
          echo "No test results found"
        fi

    - &ios_setup
      name: Setup iOS Environment
      script: |
        cd ios
        pod repo update
        pod install
        cd ..

    - &ios_simulator_setup
      name: Start iOS Simulator
      script: |
        xcrun simctl boot "iPhone 15"

    - &ios_patrol_test
      name: Run iOS Patrol Tests
      script: |
        # Create test results directory
        TEST_RESULTS_DIR="$FCI_BUILD_DIR/test-results/ios"
        
        # Run tests with report generation
         patrol test -t integration_test/fail_login_test.dart  \
          --verbose \
          --device "iPhone 15" \
          --dart-define=allowDebugFeatures=true \
          --reporter junit \
          --output "$TEST_RESULTS_DIR/reports/test-results.xml"

    - &ios_test_report
      name: Generate iOS Test Report
      script: |
        if [ -d "$FCI_BUILD_DIR/test-results/ios" ]; then
          echo "Generating iOS test report..."
          
          # Create HTML report directory
          mkdir -p $FCI_BUILD_DIR/test-results/ios/html
          
          # Generate HTML report
          echo "<html><body>" > $FCI_BUILD_DIR/test-results/ios/html/index.html
          echo "<h1>iOS Test Results</h1>" >> $FCI_BUILD_DIR/test-results/ios/html/index.html
          echo "<pre>" >> $FCI_BUILD_DIR/test-results/ios/html/index.html
          cat $FCI_BUILD_DIR/test-results/ios/reports/test-results.xml >> $FCI_BUILD_DIR/test-results/ios/html/index.html
          echo "</pre></body></html>" >> $FCI_BUILD_DIR/test-results/ios/html/index.html
          
          # Generate test summary
          echo "Test Summary:" > $FCI_BUILD_DIR/test-results/ios/summary.txt
          grep "tests=" $FCI_BUILD_DIR/test-results/ios/reports/test-results.xml >> $FCI_BUILD_DIR/test-results/ios/summary.txt
        else
          echo "No test results found"
        fi

workflows:
  patrol_android_test:
    name: Android Test Workflow
    max_build_duration: 120
    instance_type: linux
    working_directory: mobile
    environment:
      <<: *env_settings
    scripts:
      - *install_flutter_dependencies
      - *install_patrol_cli
      - *setup_test_report_directory
      - *android_setup_emulator
      - *android_patrol_test
      - *android_test_report
    publishing:
      email:
        recipients: *qa_emails
        notify:
          success: true
          failure: true
    artifacts:
          - test-results/android/summary.txt
          - test-results/android/html/index.html
          - test-results/android/**/*
        

  patrol_ios_test:
    name: iOS GoHenry Integration Tests
    instance_type: mac_mini_m2
    max_build_duration: 120
    working_directory: mobile
    environment:
      <<: *env_settings
    scripts:
      - *install_flutter_dependencies
      - *install_patrol_cli
      - *setup_test_report_directory
      - *ios_setup
      - *ios_simulator_setup
      - *ios_patrol_test
      - *ios_test_report
    publishing:
      email:
        recipients: *qa_emails
        notify:
          success: true
          failure: true
    artifacts:
          - test-results/ios/summary.txt
          - test-results/ios/html/index.html
          - test-results/ios/**/*