workflows:
  patrol_test:
    name: Patrol Test Workflow
    environment:
      flutter: stable
      xcode: latest
      vars:
        ANDROID_HOME: $HOME/Library/Android/sdk
        ANDROID_SDK_ROOT: /opt/android-sdk
        PATH: $PATH:/opt/android-sdk/cmdline-tools/latest/bin:/opt/android-sdk/platform-tools:/opt/android-sdk/emulator
    scripts:
      # 1. Install Flutter dependencies
      - name: Install Flutter dependencies
        script: |
          flutter pub get

      - name: Install Android SDK Command-Line Tools
        script: |
          sdkmanager --install "cmdline-tools;latest"
          sdkmanager --install "platform-tools"
          sdkmanager --install "emulator"
          sdkmanager --install "system-images;android-30;google_apis;x86_64"
          sdkmanager --licenses
          
      # 2. Set up Android SDK Command-Line Tools
      - name: Set up Android SDK
        script: |
          curl -o commandlinetools.zip https://dl.google.com/android/repository/commandlinetools-mac-7583922_latest.zip
          mkdir -p $ANDROID_HOME/cmdline-tools/latest
          unzip -q commandlinetools.zip -d $ANDROID_HOME/cmdline-tools/latest
          export PATH="$ANDROID_HOME/cmdline-tools/latest/bin:$PATH"
          export PATH="$ANDROID_HOME/platform-tools:$PATH"
          sdkmanager --update
          yes | sdkmanager --licenses
          sdkmanager "system-images;android-30;google_apis;x86_64"

      - name: Debug AVD setup
        script: |
          sdkmanager --list
          avdmanager list device
          avdmanager list avd
          echo "AVD files:"
          ls -l $HOME/.android/avd
          
      # 3. Create Android Virtual Device (AVD)
      - name: Set up Android emulator
        script: |
          echo "no" | avdmanager create avd -n patrol_test_avd -k "system-images;android-30;google_apis;x86_64" --device "pixel_3a"
          emulator -list-avds
          emulator -avd patrol_test_avd -no-snapshot -no-audio -no-window &
          adb wait-for-device
          adb shell input keyevent 82  # Unlock emulator screen

      # 4. Install CocoaPods for iOS (if applicable)
      - name: Install CocoaPods
        script: |
          brew install cocoapods || echo "CocoaPods already installed"
          pod install --project-directory=ios

      # 5. Run Patrol Tests
      - name: Run Patrol Tests
        script: |
          flutter pub global activate patrol_cli
          flutter pub global run patrol test

    artifacts:
      # Collect Patrol test reports
      - ./patrol/reports/**/*
